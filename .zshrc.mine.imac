
#=============================
## alias
##=============================
alias rm='rmtrash'

alias manga="open -a cooViewer"

alias sikuli="java -Dsikuli.FromCommandLine -jar /Applications/SikuliX-IDE.app/Contents/sikuli-ide.jar -r"

alias hdu="du -h -d 1"

alias gv="groovy"

#=============================
## source z.sh
##=============================

if [ -f ~/.zsh/z.sh ]; then
  _Z_CMD=j
  source ~/.zsh/z.sh
  precmd() {
    _z --add "$(pwd -P)"
  }
fi

#=============================
## source auto-fu.zsh
##=============================

#if [ -f ~/.zsh/auto-fu.zsh ]; then
#  source ~/.zsh/auto-fu.zsh
#  function zle-line-init () {
#    auto-fu-init
#  }
#  zle -N zle-line-init
#  zstyle ':completion:*' completer _oldlist _complete
#  zstyle ':auto-fu:var' autoable-function/skiplines \
#    '(scp|svn|java|mount_smbfs|mount_afp) *'
#fi

# rbenv
if [[ -d ~/.rbenv ]]; then
  eval "$(rbenv init -)"
fi

## rbenv binstubs setting
export PATH=./vendor/bin:$PATH
alias be='bundle exec'

# node
if [[ -f ~/.nvm/nvm.sh ]]; then
  [[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh
  nvm use default
  npm_dir=${NVM_PATH}_modules
  export NODE_PATH=$npm_dir
fi

# pyenv
export PYENV_ROOT="${HOME}/.pyenv"
export PATH=${PYENV_ROOT}/bin:$PATH
eval "$(pyenv init -)"

# java default version
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)

# macvim
case ${OSTYPE} in
darwin*) # Mac OS X
  function mvim () {
    if [ -d /Applications/MacVim.app ]
    then
      [ ! -f $1 ] && touch $1
      open -a MacVim $1
    else
      vim $1
    fi
  }
  #alias vim='macvim'
  ;;
esac

# docker
# eval "$(docker-machine env default)"
